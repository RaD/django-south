# Russian translations for South package.
# Copyright (C) 2010, Andrew Godwin
# This file is distributed under the same license as the South package.
# Automatically generated, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: South 0.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-10-04 23:35\n"
"PO-Revision-Date: 2013-10-04 23:35\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ru\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"

# 36d644f3ca4143a888dfd38fb0a224d1
#: ../../autodetector.rst:5
msgid "The Autodetector"
msgstr ""

# 8f0d07fb1b4748da818e0472b66e79e5
#: ../../autodetector.rst:7
msgid ""
"The autodetector is the part of South you'll probably be using the most, as "
"well as being the feature that people seem to like the most."
msgstr ""

# 9e7f8139265b443c941ebe86ebf10671
#: ../../autodetector.rst:10
msgid ""
"The general use of the autodetector is covered in :ref:`tutorial-part-1`; "
"this is more of a reference of what it's capable of."
msgstr ""

# f2657abab79d48909337ba0298ba4b25
#: ../../autodetector.rst:13
msgid ""
"When the autodetector runs, it compares your current models with those "
"frozen in your most recent migration on the app, and if it finds any "
"changes, yields one or more Actions to the South migration-file-writer."
msgstr ""

# be5d2c08b1054aa9b7c9c3e76a7cca7f
#: ../../autodetector.rst:20
msgid "Supported Actions"
msgstr ""

# 92ffde4e93e8420ea0265b7b30200034
#: ../../autodetector.rst:23
msgid "Model creation and deletion"
msgstr ""

# 265f254752734c48a32aef1903af1f1c
#: ../../autodetector.rst:25
msgid ""
"South will happily detect the creation and deletion of models; this is the "
"oldest and most well-worn feature of the autodetector, and so has very few "
"caveats."
msgstr ""

# a66b2a263e7e44529e8e744b1d233fc1
#: ../../autodetector.rst:29
msgid ""
"One thing to note is that, while South calls the post_syncdb hook on your "
"models (much like ``syncdb`` does), it calls it when it initially creates "
"the table, not at the end of the migration, so your hook might well get "
"called when the model doesn't have its full table."
msgstr ""

# 3e7d1c612063495d954fa8864976737a
#: ../../autodetector.rst:34
msgid ""
"Consider moving your hook code into its own data migration, or use one of "
"our own :ref:`signals`."
msgstr ""

# afe95f4c1820417b87cd611f639c52f7
#: ../../autodetector.rst:39
msgid "Field addition and removal"
msgstr ""

# a2f813420a734338865e573394bd0d75
#: ../../autodetector.rst:41
msgid ""
"South detects addition and removal of fields fine, and should correctly "
"create indexes and constraints for new fields."
msgstr ""

# d27674a46e004354ad74f52b17718e11
#: ../../autodetector.rst:44
msgid ""
"Note that when you add or remove a field, you need a default specified; "
"there's more explanation on this in the :ref:`tutorial-part-2-defaults` part "
"of the tutorial."
msgstr ""

# 5f0500541d4f4c4b9914f3a34b85fa6d
#: ../../autodetector.rst:50
msgid "Field changes"
msgstr ""

# e83f6eb605da4dce80300810b565445c
#: ../../autodetector.rst:52
msgid ""
"South will detect if you change a field, and should correctly change the "
"field type, with one exception:"
msgstr ""

# 62500cf107614116be19352370fb7a64
#: ../../autodetector.rst:55
msgid ""
"If you alter to a field with a CHECK constraint (e.g. "
"``PositiveIntegerField``) the constraint won't be added to the column (it is "
"removed if you alter away, however). This will be fixed in a future release."
msgstr ""

# 7377254f7e6d4968a14790ee760b0477
#: ../../autodetector.rst:61
msgid "ManyToMany addition and removal"
msgstr ""

# 7fa9291a8c5d41ab8b817a60bd9e17c2
#: ../../autodetector.rst:63
msgid ""
"ManyToMany fields are detected on addition and removal; when you add the "
"field, South will create the table the ManyToMany represents, and when you "
"remove the field, the table will be deleted."
msgstr ""

# 8ed91d43a128465a92bfc3e635d35346
#: ../../autodetector.rst:67
msgid ""
"The one exception to this is when you have a 'through model' (i.e. you're "
"using the ``through=`` option) - since the table for the model is already "
"created when the model is detected, South does nothing with these types of "
"ManyToMany fields."
msgstr ""

# cbcd67319dc24440ae654574253b6217
#: ../../autodetector.rst:73
msgid "Unique changes"
msgstr ""

# 4c6cd50df966440f80ad25877fb106c6
#: ../../autodetector.rst:75
msgid ""
"If you change the ``unique=`` attribute on a field, or the "
"``unique_together`` in a model's Meta, South will detect and change the "
"constraints on the database accordingly (except on SQLite, where we don't "
"yet have the code to edit UNIQUE constraints)."
msgstr ""

# 5abe1fc9ed164fb0a1f0a243daeb3ecf
#: ../../autodetector.rst:82
msgid "Multicolumn index changes"
msgstr ""

# 5f840cc97e1843dcaf8211fc3025618f
#: ../../autodetector.rst:84
msgid ""
"Django 1.5 introduced ``index_together`` in a model's Meta, allowing you to "
"specify multicolumn indexes. South will detect and change the indexes on the "
"database accordingly."
msgstr ""
